buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: "com.github.johnrengelman.shadow"

group = 'dev.psygamer'
archivesBaseName = 'econ'
version = '0.1'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: 'official', version: '1.16.4'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                econ {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                econ {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'econ', '--all',
                    '--existing', file('src/main/resources/').toString(),
                    '--existing', file('src/generated/resources/').toString(),
                    '--output', file('src/generated/resources/')

            mods {
                econ {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    shadow

    compile.extendsFrom shadow
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.4-35.1.37'

    shadow 'com.github.SparklingComet:java-mojang-api:-SNAPSHOT'
    //implementation 'com.github.SparklingComet:java-mojang-api:-SNAPSHOT'
}

shadowJar {
//    from zipTree(tasks.jar.getArchiveFile())

//    archiveBaseName.set(tasks.jar.getArchiveBaseName())
//    archiveVersion.set(tasks.jar.getArchiveVersion())

    classifier 'shadow'
    configurations = [project.configurations.shadow]


    relocate 'org.apache.http', 'dev.psygamer.econ.org.apache.http'
//    relocate 'org.apache.commons', 'dev.psygamer.econ.org.apache.commons'
}

reobf {
    shadowJar {}
}

jar {
    configurations.shadow.each {
        from(project.zipTree(it)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }

    manifest {
        attributes([
                "Specification-Title"     : "econ",
                "Specification-Vendor"    : "psyGamer",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "psyGamer",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy 'reobfJar'
jar.dependsOn shadowJar
